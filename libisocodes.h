/* libisocodes.h generated by valac 0.14.2, the Vala compiler, do not modify */


#ifndef __LIBISOCODES_H__
#define __LIBISOCODES_H__

#include <glib.h>
#include <glib-object.h>
#include <libxml/tree.h>
#include <libxml/parser.h>
#include <stdlib.h>
#include <string.h>

G_BEGIN_DECLS


#define ISOCODES_TYPE_ISO_CODES (isocodes_iso_codes_get_type ())
#define ISOCODES_ISO_CODES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ISOCODES_TYPE_ISO_CODES, isocodesISO_Codes))
#define ISOCODES_ISO_CODES_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ISOCODES_TYPE_ISO_CODES, isocodesISO_CodesClass))
#define ISOCODES_IS_ISO_CODES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ISOCODES_TYPE_ISO_CODES))
#define ISOCODES_IS_ISO_CODES_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ISOCODES_TYPE_ISO_CODES))
#define ISOCODES_ISO_CODES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ISOCODES_TYPE_ISO_CODES, isocodesISO_CodesClass))

typedef struct _isocodesISO_Codes isocodesISO_Codes;
typedef struct _isocodesISO_CodesClass isocodesISO_CodesClass;
typedef struct _isocodesISO_CodesPrivate isocodesISO_CodesPrivate;

#define ISOCODES_TYPE_ISO_3166 (isocodes_iso_3166_get_type ())
#define ISOCODES_ISO_3166(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ISOCODES_TYPE_ISO_3166, isocodesISO_3166))
#define ISOCODES_ISO_3166_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ISOCODES_TYPE_ISO_3166, isocodesISO_3166Class))
#define ISOCODES_IS_ISO_3166(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ISOCODES_TYPE_ISO_3166))
#define ISOCODES_IS_ISO_3166_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ISOCODES_TYPE_ISO_3166))
#define ISOCODES_ISO_3166_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ISOCODES_TYPE_ISO_3166, isocodesISO_3166Class))

typedef struct _isocodesISO_3166 isocodesISO_3166;
typedef struct _isocodesISO_3166Class isocodesISO_3166Class;
typedef struct _isocodesISO_3166Private isocodesISO_3166Private;

#define ISOCODES_TYPE_ISO_3166_ENTRY (isocodes_iso_3166_entry_get_type ())
#define ISOCODES_ISO_3166_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), ISOCODES_TYPE_ISO_3166_ENTRY, isocodesISO_3166_Entry))
#define ISOCODES_ISO_3166_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), ISOCODES_TYPE_ISO_3166_ENTRY, isocodesISO_3166_EntryClass))
#define ISOCODES_IS_ISO_3166_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), ISOCODES_TYPE_ISO_3166_ENTRY))
#define ISOCODES_IS_ISO_3166_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), ISOCODES_TYPE_ISO_3166_ENTRY))
#define ISOCODES_ISO_3166_ENTRY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), ISOCODES_TYPE_ISO_3166_ENTRY, isocodesISO_3166_EntryClass))

typedef struct _isocodesISO_3166_Entry isocodesISO_3166_Entry;
typedef struct _isocodesISO_3166_EntryClass isocodesISO_3166_EntryClass;
typedef struct _isocodesISO_3166_EntryPrivate isocodesISO_3166_EntryPrivate;

struct _isocodesISO_Codes {
	GObject parent_instance;
	isocodesISO_CodesPrivate * priv;
	xmlDoc* _xml;
};

struct _isocodesISO_CodesClass {
	GObjectClass parent_class;
};

typedef enum  {
	ISOCODES_ISO_CODES_ERROR_FILE_DOES_NOT_EXIST,
	ISOCODES_ISO_CODES_ERROR_CANNOT_PARSE_FILE,
	ISOCODES_ISO_CODES_ERROR_FILE_DOES_NOT_CONTAIN_ISO_DATA,
	ISOCODES_ISO_CODES_ERROR_CODE_NOT_DEFINED
} isocodesISOCodesError;
#define ISOCODES_ISO_CODES_ERROR isocodes_iso_codes_error_quark ()
struct _isocodesISO_3166 {
	isocodesISO_Codes parent_instance;
	isocodesISO_3166Private * priv;
};

struct _isocodesISO_3166Class {
	isocodesISO_CodesClass parent_class;
};

struct _isocodesISO_3166_Entry {
	GObject parent_instance;
	isocodesISO_3166_EntryPrivate * priv;
};

struct _isocodesISO_3166_EntryClass {
	GObjectClass parent_class;
};


GType isocodes_iso_codes_get_type (void) G_GNUC_CONST;
GQuark isocodes_iso_codes_error_quark (void);
void isocodes_iso_codes_open_file (isocodesISO_Codes* self, const gchar* name, GError** error);
xmlNode** _isocodes_iso_codes_find_code_in_attributes (isocodesISO_Codes* self, gchar** attributes, int attributes_length1, const gchar* code, int* result_length1, GError** error);
isocodesISO_Codes* isocodes_iso_codes_new (void);
isocodesISO_Codes* isocodes_iso_codes_construct (GType object_type);
const gchar* isocodes_iso_codes_get_filepath (isocodesISO_Codes* self);
void isocodes_iso_codes_set_filepath (isocodesISO_Codes* self, const gchar* value);
const gchar* isocodes_iso_codes_get_standard (isocodesISO_Codes* self);
void isocodes_iso_codes_set_standard (isocodesISO_Codes* self, const gchar* value);
GType isocodes_iso_3166_get_type (void) G_GNUC_CONST;
isocodesISO_3166* isocodes_iso_3166_new (void);
isocodesISO_3166* isocodes_iso_3166_construct (GType object_type);
GType isocodes_iso_3166_entry_get_type (void) G_GNUC_CONST;
isocodesISO_3166_Entry** isocodes_iso_3166_search_code (isocodesISO_3166* self, const gchar* code, int* result_length1, GError** error);
isocodesISO_3166_Entry* isocodes_iso_3166_entry_new (xmlNode* node);
isocodesISO_3166_Entry* isocodes_iso_3166_entry_construct (GType object_type, xmlNode* node);
const gchar* isocodes_iso_3166_entry_get_alpha_2_code (isocodesISO_3166_Entry* self);
void isocodes_iso_3166_entry_set_alpha_2_code (isocodesISO_3166_Entry* self, const gchar* value);
const gchar* isocodes_iso_3166_entry_get_alpha_3_code (isocodesISO_3166_Entry* self);
void isocodes_iso_3166_entry_set_alpha_3_code (isocodesISO_3166_Entry* self, const gchar* value);
const gchar* isocodes_iso_3166_entry_get_numeric_code (isocodesISO_3166_Entry* self);
void isocodes_iso_3166_entry_set_numeric_code (isocodesISO_3166_Entry* self, const gchar* value);
const gchar* isocodes_iso_3166_entry_get_name (isocodesISO_3166_Entry* self);
void isocodes_iso_3166_entry_set_name (isocodesISO_3166_Entry* self, const gchar* value);
const gchar* isocodes_iso_3166_entry_get_official_name (isocodesISO_3166_Entry* self);
void isocodes_iso_3166_entry_set_official_name (isocodesISO_3166_Entry* self, const gchar* value);
const gchar* isocodes_iso_3166_entry_get_common_name (isocodesISO_3166_Entry* self);
void isocodes_iso_3166_entry_set_common_name (isocodesISO_3166_Entry* self, const gchar* value);


G_END_DECLS

#endif
